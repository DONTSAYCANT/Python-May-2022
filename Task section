========================
May 28
=======================

#Hackerrank account creation  https://www.hackerrank.com/dashboard
#Github account creation and repo creation   https://github.com/DONTSAYCANT/Python-May-2022 Create a repo like this
#Python installation  IDLE pycharm jupyter notebook  https://www.python.org/ftp/python/3.10.4/python-3.10.4-amd64.exe
#sample file upload in github repo


===========================
May 29 (1-2 line definition and 3-5 lines python codes) w3schools geeksforgeeks
============================
variable 
data type 
operator (ternary/Arithmetic/comparison/logical/assignment/membership
Data structure 
function inbuilt function user def recursive function
Keyword
PEP
Camelcase
Variable creation rules and program for that
Compiler vs interpreter


=============================
June 5
=============================

Task1:

Data type conversion table

int ===> convert it in to float bool str
float ===> convert it in to int bool str
bool ===> convert it in to float int str
str ===> convert it in to float bool int

Task2:

For below programs collect input from user, pi is constant value 3.14 (print output in formatted way)

write a program to calculate perimeter of the circle with radius 10.2
write a program to calculate area of circle with radius (float) (collect using input function)
write a program to calculate perimeter of the cricle with radius (float) (collect it through input function)
Collect radius and height from user,
calculate Area of cone (area of cone = 0.33 * pi * r * r * h) (int)


=========================
june 12
==========================

Type1: var = "python_interpreter"

print(var[1:3])
print(var[0:5])
print(var[-5:-2])
print(var[:3])
print(var[3:])
print(var[:])
print(val[3:10])
print(val[2:5])
print(val[0:10])
print(val[5:-5])
print(val[2:8])
print(val[:8])
print(val[5:])
print(val[8:12])
print(val[12:5])



Type2:  var = "java_compiler_go"

print(var[2:10])
print(var[2:10:1])
print(var[2:10:2])
print(var[2:10:3])
print(var[-12:10])
print(var[-12:10:1])
print(var[-12:10:2])
print(var[-12:10:3])

print(var[5::1])
print(var[5::2])
print(var[:5:1])
print(var[:-5:1])
print(var[-8::2])

print(val[3:10:1])
print(val[3:10:2])
print(val[3:10:3])
print(val[5:-5:1])
print(val[5:-5:2])
print(val[5:-5:5])
print(val[:8:4])
print(val[5::3])
print(val[::2])
print(val[12:5:3])


"Information_Technology"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]


"python_is_using_interpreter"

#[-2:0:-1]
#[5:-5:5]
#[-5:5:-5]
#[5:-5:-5]
#[3:9:-1]
#[9:-10:-2]
#[2:-4:-4]
#[-4:2:-2]
#[0:-1:-3]
#[-3:3:6]
#[::-3]
#[::-2]
#[2:-2:-2]
#[2:-2:2]
#[5:-5:5]
#[3:-3:3]
#[::2]
#[::-5]



"computer science"

print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])

"Information_technology"


print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])


"Google_chrome_browser"


print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])


Pre study:

https://www.w3schools.com/python/python_ref_string.asp (complete it )
https://www.w3schools.com/python/python_ref_list.asp
https://www.w3schools.com/python/python_ref_tuple.asp
https://www.w3schools.com/python/python_ref_set.asp
https://www.w3schools.com/python/python_ref_dictionary.asp



